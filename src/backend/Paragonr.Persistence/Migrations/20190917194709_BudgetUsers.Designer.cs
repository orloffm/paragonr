// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Paragonr.Persistence;

namespace Paragonr.Persistence.Migrations
{
    [DbContext(typeof(BudgetDbContext))]
    [Migration("20190917194709_BudgetUsers")]
    partial class BudgetUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Paragonr.Entities.Budget", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("Paragonr.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BudgetId");

                    b.Property<long?>("DomainId");

                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("DomainId");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Paragonr.Entities.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("Name");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Paragonr.Entities.CurrencyRate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BaseId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(19, 6)");

                    b.Property<long>("TargetId");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("TargetId");

                    b.ToTable("CurrencyRates");
                });

            modelBuilder.Entity("Paragonr.Entities.Domain", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BudgetId");

                    b.Property<long?>("DefaultCategoryId");

                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("DefaultCategoryId")
                        .IsUnique()
                        .HasFilter("[DefaultCategoryId] IS NOT NULL");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("Paragonr.Entities.Membership", b =>
                {
                    b.Property<long>("BudgetId");

                    b.Property<long>("UserId");

                    b.Property<long>("Id");

                    b.Property<bool>("IsManager");

                    b.HasKey("BudgetId", "UserId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("Paragonr.Entities.Spending", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AddedById");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19, 6)");

                    b.Property<long?>("BudgetId");

                    b.Property<long?>("CategoryId");

                    b.Property<long?>("CurrencyId");

                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Note");

                    b.Property<string>("Place");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("BudgetId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Spendings");
                });

            modelBuilder.Entity("Paragonr.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Paragonr.Entities.Category", b =>
                {
                    b.HasOne("Paragonr.Entities.Budget", "Budget")
                        .WithMany("Categories")
                        .HasForeignKey("BudgetId")
                        .HasConstraintName("FK_Category_Budget")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Paragonr.Entities.Domain", "Domain")
                        .WithMany("Categories")
                        .HasForeignKey("DomainId")
                        .HasConstraintName("FK_Category_Domain");
                });

            modelBuilder.Entity("Paragonr.Entities.CurrencyRate", b =>
                {
                    b.HasOne("Paragonr.Entities.Currency", "Base")
                        .WithMany()
                        .HasForeignKey("BaseId")
                        .HasConstraintName("FK_CurrencyRate_BaseCurrency");

                    b.HasOne("Paragonr.Entities.Currency", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .HasConstraintName("FK_CurrencyRate_TargetCurrency");
                });

            modelBuilder.Entity("Paragonr.Entities.Domain", b =>
                {
                    b.HasOne("Paragonr.Entities.Budget", "Budget")
                        .WithMany("Domains")
                        .HasForeignKey("BudgetId")
                        .HasConstraintName("FK_Domain_Budget")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Paragonr.Entities.Category", "DefaultCategory")
                        .WithOne()
                        .HasForeignKey("Paragonr.Entities.Domain", "DefaultCategoryId")
                        .HasConstraintName("FK_Domain_DefaultCategory");
                });

            modelBuilder.Entity("Paragonr.Entities.Membership", b =>
                {
                    b.HasOne("Paragonr.Entities.Budget", "Budget")
                        .WithMany("Memberships")
                        .HasForeignKey("BudgetId")
                        .HasConstraintName("FK_Membership_Budget")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Paragonr.Entities.User", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Membership_User")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Paragonr.Entities.Spending", b =>
                {
                    b.HasOne("Paragonr.Entities.User", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Paragonr.Entities.Budget", "Budget")
                        .WithMany("Spendings")
                        .HasForeignKey("BudgetId")
                        .HasConstraintName("FK_Spending_Budget");

                    b.HasOne("Paragonr.Entities.Category", "Category")
                        .WithMany("Spendings")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Spending_Category");

                    b.HasOne("Paragonr.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Spending_Currency");
                });
#pragma warning restore 612, 618
        }
    }
}
