// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Paragonr.Entities;

namespace Paragonr.Entities.Migrations
{
    [DbContext(typeof(BudgetContext))]
    partial class BudgetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Paragonr.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DomainId");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Paragonr.Entities.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsMain")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Paragonr.Entities.CurrencyRate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CurrencyId");

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("RateToMain")
                        .HasColumnType("decimal(19, 6)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyRates");
                });

            modelBuilder.Entity("Paragonr.Entities.Domain", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DefaultCategoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DefaultCategoryId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("Paragonr.Entities.Spending", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("CategoryId");

                    b.Property<long?>("CurrencyId");

                    b.Property<string>("Note");

                    b.Property<string>("Place");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Spendings");
                });

            modelBuilder.Entity("Paragonr.Entities.Category", b =>
                {
                    b.HasOne("Paragonr.Entities.Domain", "Domain")
                        .WithMany("Categories")
                        .HasForeignKey("DomainId");
                });

            modelBuilder.Entity("Paragonr.Entities.CurrencyRate", b =>
                {
                    b.HasOne("Paragonr.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Paragonr.Entities.Domain", b =>
                {
                    b.HasOne("Paragonr.Entities.Category", "DefaultCategory")
                        .WithMany()
                        .HasForeignKey("DefaultCategoryId");
                });

            modelBuilder.Entity("Paragonr.Entities.Spending", b =>
                {
                    b.HasOne("Paragonr.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Paragonr.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");
                });
#pragma warning restore 612, 618
        }
    }
}
